{"version":3,"sources":["components/ContactList/Contact.module.css","components/Form/Form.module.css","App.module.css","components/Filter/Filter.module.css","components/Filter/Filter.js","components/ContactList/ContactElement.js","components/ContactList/ContactList.js","components/Form/Form.js","App.js","index.js"],"names":["module","exports","Filter","id","value","onChange","htmlFor","className","s","labelText","type","name","filterBtn","ContactElement","contact","onDeleteContact","number","deleteBtn","onClick","ContactList","contacts","list","map","prototype","PropTypes","arrayOf","shape","string","func","Form","state","contactIdName","uuidv4","contactIdNumber","handleSubmit","e","preventDefault","obj","props","onSubmit","resetForm","setState","handleChange","target","this","pattern","title","required","addBtn","Component","App","contactsData","filter","newContact","find","alert","deleteContact","prevState","changeFilter","currentTarget","console","log","localContact","localStorage","getItem","parseContact","JSON","parse","prevProps","setItem","stringify","filteredContacts","toLowerCase","includes","wrapper","pageTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9110d9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__3PMlM\",\"deleteBtn\":\"Contact_deleteBtn__3uqP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBtn\":\"Form_addBtn__2POr1\",\"labelText\":\"Form_labelText__vqTL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1BzT5\",\"wrapper\":\"App_wrapper__UgStt\",\"pageTitle\":\"App_pageTitle__bOstz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelText\":\"Filter_labelText__ZN8Yj\",\"filterBtn\":\"Filter_filterBtn__3pMsY\"};","import React from \"react\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ id, value, onChange }) => (\n  <label htmlFor={id} className={s.labelText}>\n    Find contacts by name\n    <input\n      id={id}\n      type=\"text\"\n      name=\"name\"\n      value={value}\n      onChange={onChange}\n      className={s.filterBtn}\n    />\n  </label>\n);\n\nexport default Filter;\n","import s from \"./Contact.module.css\";\n\nconst ContactElement = ({ contact, onDeleteContact }) => (\n  <li key={contact.id}>\n    {contact.name}: {contact.number}\n    <button\n      className={s.deleteBtn}\n      type=\"button\"\n      onClick={() => onDeleteContact(contact.id)}\n    >\n      Delete\n    </button>\n  </li>\n);\n\nexport default ContactElement;\n","import ContactElement from \"./ContactElement\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Contact.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ol className={s.list}>\n    {contacts.map((contact) => (\n      <ContactElement\n        contact={contact}\n        onDeleteContact={onDeleteContact}\n        key={contact.id}\n      />\n    ))}\n  </ol>\n);\n\nexport default ContactList;\n\nContactList.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      number: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import { Component } from \"react\";\nimport s from \"./Form.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  contactIdName = uuidv4();\n  contactIdNumber = uuidv4();\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const obj = {\n      //составляющая контакта - имя и идентификатор\n      name,\n      number,\n      id: uuidv4(),\n    };\n    this.props.onSubmit(obj);\n\n    this.resetForm();\n  };\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleChange = (e) => {\n    const { value, name, number } = e.target;\n    this.setState({\n      [name]: value,\n      [number]: value,\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleChange, contactIdName, contactIdNumber } = this;\n    return (\n      <form onSubmit={handleSubmit}>\n        <label htmlFor={contactIdName} className={s.labelText}>\n          Name\n        </label>\n        <input\n          id={contactIdName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n\n        <label htmlFor={contactIdNumber} className={s.labelText}>\n          Number\n        </label>\n        <input\n          id={contactIdNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n        <button type=\"submit\" className={s.addBtn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import s from \"./App.module.css\";\nimport { Component } from \"react\";\nimport contactsData from \"./contacts.json\";\n\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport Form from \"./components/Form\";\n\nexport class App extends Component {\n  state = {\n    contacts: contactsData,\n    filter: \"\",\n  };\n\n  //методы жизненного цикла\n\n  componentDidMount() {\n    console.log(\"I am loaded!\");\n    const localContact = localStorage.getItem(\"contacts\");\n    const parseContact = JSON.parse(localContact);\n    if (parseContact) {\n      this.setState({ contacts: parseContact });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  //мои методы\n  handleSubmit = (newContact) => {\n    const { contacts } = this.state;\n\n    const duplicateContact = contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n    if (duplicateContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => {\n      return {\n        contacts: [...contacts, newContact], //добавление в массив введенного значения\n      };\n    });\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const { handleSubmit, changeFilter, deleteContact } = this;\n\n    const filteredContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return (\n      <div className={s.wrapper}>\n        <h1 className={s.pageTitle}>Phonebook</h1>\n        <Form onSubmit={handleSubmit} />\n        <h2>Contacts</h2>\n        <Filter onChange={changeFilter} value={filter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}